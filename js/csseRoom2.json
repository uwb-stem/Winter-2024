

{
    "csse": [
        {
            "time": "1:00-1:15",
            "projectId": "csse-2-100",
            "title": "Security Design Pattern Detection in Open-Sourced Code",
            "studentName": "Sabastian Na",
            "studentMajor": "CSSE",
            "projectType": "Faculty research",
            "facultyAdvisor": "Dr. Hazel Asuncion ",
            "posterLink": "./posters/csse/nasabastianboriboun_4029498_117547259_CSS497_Poster.png",
            "abstract": "This capstone project aimed to address the lack of awareness of Security Design Patterns (SDP) among software developers by developing an analysis tool. This tool aims to provide software developers and SDP researchers means to quickly find information. The project follows Munawar Hafiz’s catalog of SDPs as a guideline and finds their existence and related terminology in repositories like the National Vulnerability Database (NVD),the Common Weakness Enumeration (CWE), and the Common Vulnerabilities and Exposures (CVE). The project used existing web scraper and web crawler techniques and applied them to Hafiz's catalog. The goal was to extract SDP-related terms and store the information into a SQLite database. Following this web scraper, the scope would be expanded to handle multiple domains. Each of the domain web scrapers would give multiple links which were ranked on their accuracy to the information. A user interface was developed to present the web scraped data in a comprehensive view. Users of the tool would be able to give the confidence level of a domain to insure their reliability. The UI design incorporates feedback from Professor Lagesse and Professor Asuncion.\n\n The significance of this project lies in its potential to contribute to the cybersecurity field by increasing awareness among software developers regarding SDPs. The tool provides easy access to SDP information, along with vulnerabilities each SDP addresses. The goal is to assist developers in correcting implementation issues, and ultimately mitigating attacks to software systems. The methodology employed in the project included literature review, web scraping, database management, and iterative refinement. "
        },       
         {
            "time": "1:15-1:30",
            "projectId": "csse-2-115",
            "title": "Precision Gene Editing Optimal Design of Guide RNAs and Donor DNA",
            "studentName": "Yohanes Koeswono",
            "studentMajor": "CSSE",
            "projectType": "Faculty research",
            "facultyAdvisor": "Dr. Brent Lagesse",
            "posterLink": "./posters/csse/koeswonoyohanes_4003825_117548544_Poster.png",
            "abstract": "This capstone project focused on developing a tool to facilitate the design of guide RNA sequences and donor templates for CRISPR gene editing experiments. The goal was to automate and optimize the process of selecting suitable guide sequences adjacent to PAM sites and generating corresponding donor sequences that introduce desired mutations while preventing re-cutting.\n\n A key challenge I faced was efficiently handling mutations on both the coding and reverse complement strands without duplicating code. To address this, strategies were developed to reuse existing code for the inverted strand by reversing and complementing sequences as needed. This approach avoided code duplication that would have hindered maintainability.\n\n The resulting software tool takes a target gene sequence as input and allows users to specify desired amino acid changes. It then identifies eligible guide sequences, designs donor templates incorporating the mutations, and outputs the final guide+donor constructs ready for synthesis. To prevent re-cutting, the tool follows established design rules, such as mutating PAM sequences and \"seed\" regions.\n\n I also created a Unit test to verify the correctness of the complementing and reversing operations on the inverted strand. This ensures the program's reliability when targeting mutations on either strand. The significance of this work lies in accelerating the experimental design process for CRISPR gene editing. By automating guide+donor design and following best practices, the tool allows researchers to generate constructs for their experiments more efficiently and reliably. This can ultimately lead to increased throughput and consistency in gene editing studies.\n\n In summary, this project developed a software tool that simplifies guide donor design for CRISPR experiments. The strategic code design and testing ensure its robustness in handling mutations on both DNA strands. This work contributes to enhancing the productivity and reproducibility of CRISPR based research. "
        },       
        {
           "time": "1:30-1:45",
           "projectId": "csse-2-130",
           "title": "The Node API App",
           "studentName": "Anne Ha",
           "studentMajor": "CSSE",
           "projectType": "Sponsored Internship",
           "facultyAdvisor": "Dr. Brent Lagesse",
           "posterLink": "./posters/csse/haanne_4261925_117548661_Canvas_Poster_AnneHa.jpeg",
           "abstract": "T-Mobile is a leading telecommunication company with a mission centered around delivering the largest and fastest 5G network, supported by an extensive array of devices and protocols. In pursuit of this goal, THENA emerges as a website tailored for backend office operations to efficiently manage the diverse ecosystem of network devices.\n\n The objective of the project is to provide an automated and user-friendly platform, allowing internal teams to securely interact with the existing Node Info database and enhance the overall data processing capabilities.\n\n As a SWE intern taking over the database from the previous team, I was tasked with fixing 30 existing broken Flask-APIs used to communicate with it and developing a full-stack web application without disrupting current operations. Dealing with a No-SQL database that had been manually inputted by multiple teams over the years, I faced the challenges of significant inconsistency among over 30,000 data points. Additionally, working within a security team required me to address different security layers, presented additional complexity to the tasks I undertook.\n\n Starting the project with limited industry experience, I chose to take a proactive learning approach from the first day. I engaged in reverse engineering to comprehend the codebase while acquiring new tools and technologies through a combination of extensive document reading, video tutorial following and hands-on coding with an attempt to ramp up quickly by learning on the job. With that approach, I successfully utilized React for the frontend and Python-Flask for the backend, thereby improving the performance of the APIs and database. Furthermore, with the assistance of other team members, I was able to integrate the app to the current CI/CD pipeline, efficiently hosting it on the internal server. THENA also enables SSO for authentication and implements Espresso for granting access permissions to users based on their roles. \n\n While the success of THENA, currently being used and continuously improved by the team, is personally gratifying, the biggest lesson I gained from the internship was learning how to navigate through a fast-learning curve within tight timeframe. "
       },       
       {
          "time": "1:45-2:00",
          "projectId": "csse-2-145",
          "title": "College Affordability Model: Backend Testing Application",
          "studentName": "William Bach",
          "studentMajor": "CSSE",
          "projectType": "Faculty research",
          "facultyAdvisor": "Dr. Kelvin Sung",
          "posterLink": "./posters/csse/bachwill_4149031_117602968_CapstonePosterBach-2.jpg",
          "abstract": "The College Affordability Model (CAM) research project is aimed at improving transparency into the costs of higher education and how different factors and policies impact those costs. To help maintain the functionality of the CAM’s web-based application, previous students had developed a backend testing tool designed to check for database consistency and API performance. However the existing testing setup presented a challenge for CAM researchers and administrators due to the fact that, while demonstrating potential, it was not fully deployed, tested, or user-friendly. This highlighted the need for an overhaul to offer a more intuitive and efficient testing process via CAM's Python-based backend tool, in an effort to make it accessible to a broader user base.\n\n In response, my project was aimed at developing a secure, password-protected front-end interface for the CAM backend testing tool, prioritizing ease of test configuration, execution, and management. The envisioned solution was to provide a streamlined testing framework that offered simplified navigation and manipulation of test results and logs, thereby addressing the usability gap for researchers on the CAM project.\n\n My approach involved a comprehensive revamp using full-stack methods. Initial steps involved a thorough familiarization with the existing tools, followed by detailed planning which integrated feedback at every stage, from twice weekly scheduled meetings to the development and iteration of user stories, mockups, acceptance criterion, and a multi-stage survey process aimed at refining the product based on end-user input. The technical execution used a stack comprising of Django, Python, Docker, Kubernetes, and AWS services, complemented by front-end technologies like Bootstrap, JQuery, Ajax, JavaScript, and HTML/CSS to ensure scalability and enhance user experience through features like user authentication, improved navigation, and a user guide.\n\n The result is a fully-deployed and CI/CD integrated system with a functional interface that significantly simplifies the testing workflow for CAM researchers and administrators, offering an organized platform for test execution and results exploration. This redesign both improves the operational flow and the overall user experience.\n\n This project taught me the importance of user feedback, adaptability, collaboration, and thorough planning in software development. It provided a holistic understanding of software systems, from design through implementation, showcasing the relevance of various technologies and approaches. Looking forward, there's potential to expand the testing suite to include UI functionality and API correctness tests, alongside more customized and possibly automated testing options, opening avenues for further enhancements in CAM's usability and functionality. "
      },       
      {
         "time": "2:00-2:15",
         "projectId": "csse-2-100",
         "title": "Alexander Hilwa",
         "studentName": "Developing Benchmarking Programs for FLAME GPU2",
         "studentMajor": "CSSE",
         "projectType": "Faculty research",
         "facultyAdvisor": "Dr. Munehiro Fukuda",
         "posterLink": "./posters/csse/hilwaalexanderdaniel_3633831_117602805_HilwaA_Poster-1.png",
         "abstract": "For this faculty research capstone project, I worked with Professor Munehiro Fukuda and other students to develop benchmarking programs for FLAME GPU2, a GPU-accelerated agent-based simulation library for domain-independent complex system simulations, as well as to measure execution times and conduct a programmability analysis for each of the benchmarking programs.\n\n The purpose of developing benchmarking programs was to develop and improve MASS, a parallel computing library for Multi-Agent Spatial Simulation, both by improving execution times of programs running MASS as well as comparing programmability metrics.\n\n Over two quarters, I developed three benchmarking programs for FLAME GPU2 and collected execution performance and programmability data on them.\n\n The first of these programs was Game of Life, a cellular automaton consisting of a grid of cells that interact with each other. This is where the majority of useful data came from, as it was the only program of the ones I had written that had a MASS counterpart to be readily compared to. The execution time data showed that FLAME GPU2 was faster at running simulations of all sizes, and in particular did not become significantly slower at larger sizes. Based on this data, the MASS library implementation was revised to make its execution speed comparable to FLAME. However, the programmability analysis also showed that much more boilerplate code was necessary for a relatively simple program such as Game of Life.\n\n The second program was Tuberculosis, a simulation of a lung infected with the Tuberculosis bacteria. While the execution time comparison could not be conducted for Tuberculosis as the MASS version was not yet ready, the programmability analysis showed that for more complex programs such as Tuberculosis, the size of the program more than doubled from the MASS implementation. Furthermore, while the boilerplate percentage was far less than Game of Life’s, it still made up a significant portion of the program.\n\n The third program, Neural Net, was a simulation of neurons within a brain that would grow and connect to each other, eventually being able to transmit signals. This program encountered difficulties in development as limitations with FLAME GPU2 complicated the implementation significantly. As a result, benchmarking data has not yet been able to be collected for this program.\n\n In conclusion, the data collected from the benchmarking programs I have written have been used to improve the MASS library. After changes were made, the MASS execution times were nearly able to match FLAME GPU2’s times. "
     },       
     {
        "time": "2:15-2:30",
        "projectId": "csse-2-215",
        "title": "Jr Software Developer @ Amazon",
        "studentName": "Ismaeel Daud",
        "studentMajor": "CSSE",
        "projectType": "Sponsored Internship",
        "facultyAdvisor": "Dr. Arkady Retik",
        "posterLink": "./posters/csse/daudismaeel_LATE_4138077_117695992_Screenshot 2024-03-12 235040.png",
        "abstract": "For my capstone project, I undertook an internship as a junior software developer at Amazon. During the internship, I was part of the Amazon Books FAKT team, focusing on Fraud and Abuse in Kindle Technology. Our primary objective was to create services to identify potential fraudulent users and maintain a healthy service for our customers.\n\n During my internship, I engaged in various smaller projects that covered different services owned by our team. This involved tasks such as enhancing or refactoring code bases, extending or implementing new features, setting up permissions, connecting existing services, and assisting in the launch of new services designed by our team.\n\n In total, I contributed to approximately five projects of varying sizes. The most recent project involved migrating and reworking old software, transitioning it into a new service. Through these projects, I gained valuable insights into producing functional and efficient software. I also learned how to implement different Software Development Life Cycle (SDLC) methodologies, work with various frameworks, languages, and utilize cloud services. \n\nBy connecting the skills I acquired in the classroom with the practical experiences at Amazon, I am now confident in my growth as a software developer. I believe these experiences will contribute significantly to my overall progress in the field"
    },
           
   {
      "time": "2:30-2:45",
      "projectId": "csse-2-230",
      "title": "Restaurant Online Ordering Web Application",
      "studentName": "Yeongjin Kim",
      "studentMajor": "CSSE",
      "projectType": "Sponsored Internship",
      "facultyAdvisor": "Dr. Erika Parsons",
      "posterLink": "./posters/csse/kimyeongjin_4170746_117616893_poster yeongjinkim.jpg",
      "abstract": "My Capstone work was to develop a full-stack web application that enables an online orders system for a local Teriyaki restaurant. The purpose of my project was to understand various existing tools and frameworks for end-to-end web development. After researching these tools, I chose Svelte as the front-end framework, a productivity tool that was easy to learn and doesn’t need virtual Document Object Model (DOM), making it easier to do updates compared to React. For back-end development I used Nodejs, which supports JavaScript and it makes a great choice for data-intensive application development. For data storage and management, I chose MySQL, a relational database (DB) which uses SQL. This is a popular, free, lightweight, secure and convenient database for data retrieval, manipulation and maintenance. Security is a crucial aspect for this website because it is necessary to protect customers’ information.\n\n My website includes relevant features of other restaurant websites, for instance, menu navigation, item introduction and description, item cart tracking and item rating and ability for customers to provide reviews and description. Additionally, in the menu pages customers can customize items with their preferences, for example, adding extra sauce, extra meat, and edit other ingredients to capture. To allow data management, I created different DB roles, for instance, and restaurant administrator to help order management internally. This role also has a special webpage that allows to review and manage order and status of each item, and can help notify customers when the orders are ready to be picked up. After an order is completed, customers can leave reviews, which will be shown in main menu page for other prospective customers. \n\n Through this project, I learned how to develop a full-stack web application from scratch, and how create APIs using various frameworks and how to connect and interact with a database. Furthermore, I also understood that building APIs is not just about coding, but design is the first and most important aspect, especially centered around the end user and interacting with them is crucial for successful development and creating usable software. "
  },       
    {
       "time": "2:45-3:00",
       "projectId": "csse-2-245",
       "title": "Software Engineering Internship at F5",
       "studentName": "Youssoupha Diallo",
       "studentMajor": "CSSE",
       "projectType": "Sponsored Internship",
       "facultyAdvisor": "Dr. Arkady Retik",
       "posterLink": "./posters/csse/dialloyoussoupha_4258280_117595090_capstone_css.png",
       "abstract": "In this abstract, I present an overview of my capstone project about my experience during my internship at f5. The internship focused on the development of a python script for streamlining an inefficient time consuming developer process in a team of ~20 developers. The time consuming process was 2 sets of uniquely formatted api schemas defined by hundreds of yaml files that needed to be manually synced with every update, this process hampered productivity, involving a cumbersome procedure with constant double checking that not only slowed down workflow and resulted in substantial man-hours being expended unnecessarily, but also was extremely dull work to complete.\n\n My team assigned me to create a solution for this problem and I started work. The core of my work involved rigorous analysis, design, and development phases. My solution consisted of 4 parts, one handling the ingest of files from one of the schema sets, one handling the creation of a intermediate files with more parity to the second schema, one handling the combining of the intermediate and second schema, and the final one writing the files and any auxiliary files accordingly. This design allowed me to easily account for any edge cases in the schema files and simplified the project allowing for straightforward maintainability and code legibility. After I finished implementing my solution I presented it to the organization's upper management. The reception was overwhelmingly positive. The implementation of my project resulted in a significant reduction in man-hours required for the process, increasing overall productivity and operational efficiency within the team.\n\n In summary, my internship project illustrates my ability to solve operational inefficiencies within large teams. By targeting a specific problem and creating a streamlined solution, I created a project that meaningfully cut down man-hours. All while maintaining easy extensibility and legibility with clear documentation. "
   }
    ]
}


